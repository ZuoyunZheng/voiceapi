services:
  # Frontend
  frontend:
    build:
      context: frontend
      dockerfile: docker/Dockerfile
    ports:
      - "8501:3000"
    # No more audio related configs since audio is handled browser/client side
    # devices:
    #   - /dev/snd:/dev/snd
    # volumes:
    #   - /dev/shm:/dev/shm
    # environment:
    #   - ALSA_CARD=Generic_1
    # group_add:
    #   - audio
    depends_on:
      - app

  # Backend
  app:
    build:
      context: .
      dockerfile: backend/docker/Dockerfile.app
    ports:
      - "8000:8000"
    depends_on: # TODO: check dependency
      - vad
      - asr
      - sid
      - kws
      - agent

  vad:
    build:
      context: .
      dockerfile: backend/docker/Dockerfile.sherpa
    runtime: nvidia
    volumes:
      - ./models:/app/models:ro
    environment:
      - PUSH_PORT=tcp://*:8002
      - PULL_PORT=tcp://app:8001
    command: uv run backend/vad.py --docker --provider cuda

  asr:
    build:
      context: .
      dockerfile: backend/docker/Dockerfile.sherpa
    runtime: nvidia
    volumes:
      - ./models:/app/models:ro
    environment:
      - PUSH_PORT=tcp://*:8003
      - PULL_PORT=tcp://vad:8002
    command: uv run backend/asr.py --docker --provider cuda

  sid:
    build:
      context: .
      dockerfile: backend/docker/Dockerfile.sherpa
    runtime: nvidia
    volumes:
      - ./models:/app/models:ro
    environment:
      - PUSH_PORT=tcp://*:8004
      - PULL_PORT=tcp://vad:8002
    command: uv run backend/sid.py --docker --provider cuda

  kws:
    build:
      context: .
      dockerfile: backend/docker/Dockerfile.sherpa
    runtime: nvidia
    volumes:
      - ./models:/app/models:ro
    environment:
      - PUSH_PORT=tcp://*:8005
      - PULL_PORT=tcp://vad:8002
    command: uv run backend/kws.py --docker --provider cuda

  agent:
    build:
      context: .
      dockerfile: backend/docker/Dockerfile.agent
    runtime: nvidia
    volumes:
      - ./models:/app/models:ro
    environment:
      - PUSH_PORT=tcp://*:8008
      - PULL_PORT=tcp://app:8007
    command: uv run backend/agent.py --docker

networks:
  default:
    driver: bridge
